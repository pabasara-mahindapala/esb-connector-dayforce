<!--
  ~ Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
  <template xmlns="http://ws.apache.org/ns/synapse" name="getBulkEmployeeStatus">
    <parameter name="backgroundJobQueueItemId"/>
    <!-- <parameter name="contextDate"/>
    <parameter name="expand"/>
    <parameter name="contextDateRangeFrom"/>
    <parameter name="contextDateRangeTo"/> -->

    <sequence>
        <property value="application/json" name="accept" scope="transport"/>
        <property expression="fn:concat('Basic ',$ctx:ceridianDayForceAuthHeader)" name="Authorization"
                  scope="transport"/>
        <property name="uri.var.backgroundJobQueueItemId" expression="$func:backgroundJobQueueItemId"/>
        <!-- <property name="uri.var.optional_query_params" value=""/> -->
        <property name="Accept-Encoding" scope="transport" action="remove"/>

        <!-- Filter each optional query parameter and append to optional query parameters list if they are not empty-->
        <!-- <filter source="boolean($func:contextDate)" regex="true">
            <then>
                <property name="uri.var.optional_query_params"
                          expression="fn:concat($ctx:uri.var.optional_query_params,'contextDate=',$func:contextDate,'&amp;')"/>
            </then>
        </filter>
        <filter source="boolean($func:expand)" regex="true">
            <then>
                <property name="uri.var.optional_query_params"
                          expression="fn:concat($ctx:uri.var.optional_query_params,'expand=',$func:expand,'&amp;')"/>
            </then>
        </filter>
        <filter source="boolean($func:contextDateRangeFrom)" regex="true">
            <then>
                <property name="uri.var.optional_query_params"
                          expression="fn:concat($ctx:uri.var.optional_query_params,'contextDateRangeFrom=',$func:contextDateRangeFrom,'&amp;')"/>
            </then>
        </filter>
        <filter source="boolean($func:contextDateRangeTo)" regex="true">
            <then>
                <property name="uri.var.optional_query_params"
                          expression="fn:concat($ctx:uri.var.optional_query_params,'contextDateRangeTo=',$func:contextDateRangeTo,'&amp;')"/>
            </then>
        </filter> -->

        <!--Add ? and remove tailing &-->
        <!-- <filter source="boolean($ctx:uri.var.optional_query_params)" regex="true">
            <then>
                <property name="uri.var.optional_query_params"
                          expression="fn:concat('?',$ctx:uri.var.optional_query_params)"/>
                <property name="optional_query_params_length"
                          expression="fn:string-length($ctx:uri.var.optional_query_params)"/>
                <property name="uri.var.optional_query_params"
                          expression="fn:substring($ctx:uri.var.optional_query_params, 1, $ctx:optional_query_params_length -1 )"/>
            </then>
        </filter> -->
        <filter source="$ctx:dayforceRestBlocking" regex="true">
            <then>
                <call blocking="true">
                    <endpoint>
                        <http method="get"
                              uri-template="https://{+uri.var.clientNamespace}/{uri.var.apiVersion}/EmployeeExportJobs/Status/{+uri.var.backgroundJobQueueItemId}">
                            <timeout>
                                <duration>{$ctx:httpRequestTimeout}</duration>
                                <responseAction>fault</responseAction>
                            </timeout>
                            <suspendOnFailure>
                                <errorCodes>-1</errorCodes>
                                <initialDuration>0</initialDuration>
                                <progressionFactor>1</progressionFactor>
                                <maximumDuration>0</maximumDuration>
                            </suspendOnFailure>
                            <markForSuspension>
                                <errorCodes>-1</errorCodes>
                            </markForSuspension>
                        </http>
                    </endpoint>
                </call>
            </then>
            <else>
                <call>
                    <endpoint>
                        <http method="get"
                              uri-template="https://{+uri.var.clientNamespace}/{uri.var.apiVersion}/EmployeeExportJobs/Status/{+uri.var.backgroundJobQueueItemId}">
                            <timeout>
                                <duration>{$ctx:httpRequestTimeout}</duration>
                                <responseAction>fault</responseAction>
                            </timeout>
                            <suspendOnFailure>
                                <errorCodes>-1</errorCodes>
                                <initialDuration>0</initialDuration>
                                <progressionFactor>1</progressionFactor>
                                <maximumDuration>0</maximumDuration>
                            </suspendOnFailure>
                            <markForSuspension>
                                <errorCodes>-1</errorCodes>
                            </markForSuspension>
                        </http>
                    </endpoint>
                </call>
            </else>
        </filter>
    </sequence>
</template>