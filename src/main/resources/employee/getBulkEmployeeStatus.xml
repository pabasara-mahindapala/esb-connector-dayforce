<!--
  ~ Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
  <template xmlns="http://ws.apache.org/ns/synapse" name="getBulkEmployeeStatus">
    <parameter name="backgroundJobQueueItemId"/>

    <sequence>
        <property value="application/json" name="accept" scope="transport"/>
        <property expression="fn:concat('Basic ',$ctx:ceridianDayForceAuthHeader)" name="Authorization"
                  scope="transport"/>
        <property name="uri.var.backgroundJobQueueItemId" expression="$func:backgroundJobQueueItemId"/>
        <property name="Accept-Encoding" scope="transport" action="remove"/>
        <filter source="$ctx:dayforceRestBlocking" regex="true">
            <then>
                <call blocking="true">
                    <endpoint>
                        <http method="get"
                              uri-template="https://{+uri.var.clientNamespace}/{uri.var.apiVersion}/EmployeeExportJobs/Status/{+uri.var.backgroundJobQueueItemId}">
                            <timeout>
                                <duration>{$ctx:httpRequestTimeout}</duration>
                                <responseAction>fault</responseAction>
                            </timeout>
                            <suspendOnFailure>
                                <errorCodes>-1</errorCodes>
                                <initialDuration>0</initialDuration>
                                <progressionFactor>1</progressionFactor>
                                <maximumDuration>0</maximumDuration>
                            </suspendOnFailure>
                            <markForSuspension>
                                <errorCodes>-1</errorCodes>
                            </markForSuspension>
                        </http>
                    </endpoint>
                </call>
                <log level="custom">
                    <property name="After" value="GetBulkEmployeeStatus"/>
                </log>
                <property value="application/json" name="accept" scope="transport"/>
                <property expression="fn:concat('Basic ',$ctx:ceridianDayForceAuthHeader)" name="Authorization"
                        scope="transport"/>
                <property name="Accept-Encoding" scope="transport" action="remove"/>
                <filter source="$axis2:HTTP_SC" regex="30.">
                    <then>
                        <log level="custom">
                            <property name="----Working on 30x--------" value="TRUE"/>
                        </log>
                        <property name="uri.var.httpendpointurl" expression="$trp:Location"/>
                        <log level="custom">
                            <property name="httpendpointurl" expression="$ctx:uri.var.httpendpointurl"/>
                        </log>
                        <call blocking="true">
                            <endpoint>
                                <http method="get"
                                      uri-template="{uri.var.httpendpointurl}">
                                    <timeout>
                                        <duration>{$ctx:httpRequestTimeout}</duration>
                                        <responseAction>fault</responseAction>
                                    </timeout>
                                    <suspendOnFailure>
                                        <errorCodes>-1</errorCodes>
                                        <initialDuration>0</initialDuration>
                                        <progressionFactor>1</progressionFactor>
                                        <maximumDuration>0</maximumDuration>
                                    </suspendOnFailure>
                                    <markForSuspension>
                                        <errorCodes>-1</errorCodes>
                                    </markForSuspension>
                                </http>
                            </endpoint>
                        </call>
                    </then>
                    <else>
                        <log level="custom">
                            <property name="---------------no redirection----------------------" value="Return"/>
                        </log>
                    </else>
                </filter>
            </then>
            <else>
                <call>
                    <endpoint>
                        <http method="get"
                              uri-template="https://{+uri.var.clientNamespace}/{uri.var.apiVersion}/EmployeeExportJobs/Status/{+uri.var.backgroundJobQueueItemId}">
                            <timeout>
                                <duration>{$ctx:httpRequestTimeout}</duration>
                                <responseAction>fault</responseAction>
                            </timeout>
                            <suspendOnFailure>
                                <errorCodes>-1</errorCodes>
                                <initialDuration>0</initialDuration>
                                <progressionFactor>1</progressionFactor>
                                <maximumDuration>0</maximumDuration>
                            </suspendOnFailure>
                            <markForSuspension>
                                <errorCodes>-1</errorCodes>
                            </markForSuspension>
                        </http>
                    </endpoint>
                </call>
                <log level="custom">
                    <property name="After" value="GetBulkEmployeeStatus"/>
                </log>
                <property value="application/json" name="accept" scope="transport"/>
                <property expression="fn:concat('Basic ',$ctx:ceridianDayForceAuthHeader)" name="Authorization"
                        scope="transport"/>
                <property name="Accept-Encoding" scope="transport" action="remove"/>
                <filter source="$axis2:HTTP_SC" regex="30.">
                    <then>
                        <log level="custom">
                            <property name="----Working on 30x--------" value="TRUE"/>
                        </log>
                        <property name="uri.var.httpendpointurl" expression="$trp:Location"/>
                        <log level="custom">
                            <property name="httpendpointurl" expression="$ctx:uri.var.httpendpointurl"/>
                        </log>
                        <call>
                            <endpoint>
                                <http method="get"
                                uri-template="{uri.var.httpendpointurl}">
                                    <timeout>
                                        <duration>{$ctx:httpRequestTimeout}</duration>
                                        <responseAction>fault</responseAction>
                                    </timeout>
                                    <suspendOnFailure>
                                        <errorCodes>-1</errorCodes>
                                        <initialDuration>0</initialDuration>
                                        <progressionFactor>1</progressionFactor>
                                        <maximumDuration>0</maximumDuration>
                                    </suspendOnFailure>
                                    <markForSuspension>
                                        <errorCodes>-1</errorCodes>
                                    </markForSuspension>
                                </http>
                            </endpoint>
                        </call>
                    </then>
                    <else>
                        <log level="custom">
                            <property name="---------------no redirection----------------------" value="Return"/>
                        </log>
                    </else>
                </filter>
            </else>
        </filter>
    </sequence>
</template>